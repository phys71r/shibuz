Why are you looking at the solutions? 
























You're still looking!
























def calculate_forward_kinematics_robot(joint_angles):
    """Calculate xyz coordinates of end-effector given joint angles.

    Use forward kinematics equations to calculate the xyz coordinates of the end-effector
    given some joint angles.

    Args:
      joint_angles: numpy array of 3 elements [TODO names]. Numpy array of 3 elements.
    Returns:
      xyz coordinates of the end-effector in the arm frame. Numpy array of 3 elements.
    """

    end_effector_xyz = np.array([0.0, 0.0, 0.0])
    x1 = -L1 * math.sin(joint_angles[1])
    z1 = L1 * math.cos(joint_angles[1])

    x2 = -L2 * math.sin(joint_angles[1] + joint_angles[2])
    z2 = L2 * math.cos(joint_angles[1] + joint_angles[2])

    foot_pos = np.array([[x1 + x2],
                        [-HIP_OFFSET], 
                        [z1 + z2]
                        ])

    rot_mat = np.array([[math.cos(-joint_angles[0]), -math.sin(-joint_angles[0]), 0],
                        [math.sin(-joint_angles[0]), math.cos(-joint_angles[0]), 0],
                        [0, 0, 1]
                        ])  

    end_effector_xyz = np.matmul(rot_mat, foot_pos)
    return end_effector_xyz[:, 0]